plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'jacoco'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}
jacoco{
	toolVersion = "0.8.8"
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-mustache'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.6'

	// mysql 설정.
	runtimeOnly 'com.mysql:mysql-connector-j'

	//lombok 설정
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//스프링 시큐리티를 위한 디펜던시 추가
	implementation 'org.springframework.boot:spring-boot-starter-security'
	testImplementation 'org.springframework.security:spring-security-test'

	//스프링 시큐리티 사용 jwt 로그인 구현
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.12.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.12.5'

	// oauth2 -> 소셜 로그인 기능 구현
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.security:spring-security-oauth2-jose'

	// 타임리프
	implementation'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'


	//서버 재시작 없이 코드 반영
	implementation 'org.springframework.boot:spring-boot-devtools'


	//JUnit4 추가
	testImplementation("org.junit.vintage:junit-vintage-engine") {
		exclude group: "org.hamcrest", module: "hamcrest-core"
	}
}
test {
	finalizedBy jacocoTestReport // 테스트 종료후 항상 리포트 생성
}
jacocoTestReport {
	dependsOn test // 리포트 생성을 위해서는 test가 먼저 완료되어야 함
}
tasks.named('test') {
	useJUnitPlatform()
}
